name: Reusable Release Workflow (with uv)

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use'
        required: false
        default: '3.13'
        type: string
    secrets:
      TOKEN:
        description: 'GitHub token for pushing tags and creating releases'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv add git+https://github.com/Vronst/release_script --group dev
          uv sync --frozen --dev

      - name: Run release preparation script
        id: check
        run: |
          uv run release
          RESULT=$?
          if [ $RESULT -eq 0 ]; then
            echo "release_required=true" >> "$GITHUB_OUTPUT"
          else
            echo "release_required=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create release notes environment variable
        if: steps.check.outputs.release_required == 'true'
        run: |
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          cat release-notes.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create git tag and GitHub release
        if: steps.check.outputs.release_required == 'true'
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
          RELEASE_NOTES: ${{ env.RELEASE_NOTES }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$RELEASE_VERSION" -m "$RELEASE_NOTES"
          git push origin "$RELEASE_VERSION"

          RELEASE_TITLE=$(cat release-title.txt)
          gh release create "$RELEASE_VERSION" \
            --title "${RELEASE_VERSION}: ${RELEASE_TITLE}" \
            --notes "$RELEASE_NOTES"
